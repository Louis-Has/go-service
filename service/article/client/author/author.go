// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package author

import (
	"context"

	"go-service/service/pb/art"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Article    = art.Article
	ArticleRes = art.ArticleRes
	Author     = art.Author
	AuthorRes  = art.AuthorRes
	Id         = art.Id
	NilRes     = art.NilRes

	AuthorZrpcClient interface {
		GetAuthor(ctx context.Context, in *Id, opts ...grpc.CallOption) (*AuthorRes, error)
	}

	defaultAuthorZrpcClient struct {
		cli zrpc.Client
	}
)

func NewAuthorZrpcClient(cli zrpc.Client) AuthorZrpcClient {
	return &defaultAuthorZrpcClient{
		cli: cli,
	}
}

func (m *defaultAuthorZrpcClient) GetAuthor(ctx context.Context, in *Id, opts ...grpc.CallOption) (*AuthorRes, error) {
	client := art.NewAuthorClient(m.cli.Conn())
	return client.GetAuthor(ctx, in, opts...)
}
