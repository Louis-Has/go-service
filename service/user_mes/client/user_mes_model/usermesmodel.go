// Code generated by goctl. DO NOT EDIT.
// Source: user_mes.proto

package user_mes_model

import (
	"context"

	"go-service/internal/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReqID   = __.ReqID
	User    = __.User
	UserArr = __.UserArr

	UserMesModel interface {
		GetUserMes(ctx context.Context, in *ReqID, opts ...grpc.CallOption) (*User, error)
		PostUserMes(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	}

	defaultUserMesModel struct {
		cli zrpc.Client
	}
)

func NewUserMesModel(cli zrpc.Client) UserMesModel {
	return &defaultUserMesModel{
		cli: cli,
	}
}

func (m *defaultUserMesModel) GetUserMes(ctx context.Context, in *ReqID, opts ...grpc.CallOption) (*User, error) {
	client := __.NewUserMesModelClient(m.cli.Conn())
	return client.GetUserMes(ctx, in, opts...)
}

func (m *defaultUserMesModel) PostUserMes(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	client := __.NewUserMesModelClient(m.cli.Conn())
	return client.PostUserMes(ctx, in, opts...)
}
